{"version":3,"sources":["views/admin/article/manage/queryForm.jsx","views/admin/article/manage/index.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"names":["Option","date_picker","RangePicker","es_select","QueryForm","connect","state","article","getFormMeta","colon","elements","key","label","widget","react_default","a","createElement","input","placeholder","className","allowClear","_this","props","tagList","map","item","name","value","categoryList","handleSubmit","e","preventDefault","form","validateFieldsAndScroll","errors","values","console","log","getQuery","es_form","layout","onSubmit","this","FormBuilder","meta","es_button","type","htmlType","Component","queryForm","create","Manager","colorList","common","colorMap","list","pagination","total","getColumns","title","dataIndex","render","text","record","d","tag","color","sorter","b","moment","createdAt","isBefore","updatedAt","Link","to","concat","id","divider","pathname","articleId","onClick","handleDelete","fetchList","_ref","_ref$current","current","_ref$pageSize","pageSize","query","source","excluded","i","target","Object","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","_objectWithoutProperties","axios","get","params","objectSpread","page","then","res","count","setState","results","handleChange","modal","confirm","content","onOk","token","localStorage","getItem","url","method","headers","Authorization","code","message","success","_this2","_this$props","forEach","random","_this$state","table","rowKey","bordered","columns","dataSource","onChange"],"mappings":"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","file":"static/js/8.14496f79.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Button, Form, Input, Select, DatePicker } from 'antd'\nimport FormBuilder from '@/components/helper/FormBuilder'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\n\nconst RangePicker = DatePicker.RangePicker\nconst Option = Select.Option\n\n@connect(state => state.article)\nclass QueryForm extends Component {\n  static propTypes = {\n    getQuery: PropTypes.func.isRequired\n  }\n\n  getFormMeta = () => {\n    return {\n      colon: true,\n      elements: [\n        {\n          key: 'search',\n          label: '标题',\n          widget: <Input placeholder=\"请输入文章标题\" />\n        },\n        {\n          key: 'tag',\n          label: '标签',\n          widget: (\n            <Select className=\"form-select\" allowClear>\n              {this.props.tagList.map(item => (\n                <Option key={item.name} value={item.name}>\n                  {item.name}\n                </Option>\n              ))}\n            </Select>\n          )\n        },\n        {\n          key: 'category',\n          label: '分类',\n          widget: (\n            <Select className=\"form-select\" allowClear>\n              {this.props.categoryList.map(item => (\n                <Option key={item.name} value={item.name}>\n                  {item.name}\n                </Option>\n              ))}\n            </Select>\n          )\n        }\n        // {\n        //   key: 'rangTime',\n        //   label: '创建时间',\n        //   widget: (\n        //     <RangePicker\n        //       ranges={{\n        //         Today: [moment(), moment()],\n        //         'This Month': [moment().startOf('month'), moment().endOf('month')]\n        //       }}\n        //       format=\"YYYY/MM/DD HH:mm:ss\"\n        //     />\n        //   )\n        // }\n      ]\n    }\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    this.props.form.validateFieldsAndScroll((errors, values) => {\n      if (errors) return\n      console.log('submit form: ', values)\n      this.props.getQuery(values)\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"query-form\">\n        <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n          <FormBuilder meta={this.getFormMeta()} form={this.props.form}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              检索\n            </Button>\n          </FormBuilder>\n        </Form>\n      </div>\n    )\n  }\n}\n\nexport default Form.create()(QueryForm)\n","import React, { Component } from 'react'\nimport axios from '@/lib/axios'\nimport './index.less'\n\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport { random } from '@/lib'\nimport { Table, Divider, Tag, Modal, message } from 'antd'\nimport QueryForm from './queryForm'\nimport moment from 'moment'\n\n@connect(state => ({\n  colorList: state.common.colorList,\n  tagList: state.article.tagList\n}))\nclass Manager extends Component {\n  state = {\n    colorMap: {},\n    list: [],\n    pagination: {},\n    total: 0\n  }\n\n  componentDidMount() {\n    const { colorList, tagList } = this.props\n    let colorMap = {}\n    tagList.forEach(item => {\n      colorMap[item.name] = colorList[random(colorList)]\n    })\n    this.setState({ colorMap }, () => this.fetchList({ page: 1 }))\n  }\n\n  getColumns = () => {\n    // const { colorMap } = this.state\n    return [\n      {\n        title: '标题',\n        dataIndex: 'title'\n      },\n      {\n        title: '标签',\n        dataIndex: 'tags',\n        render: (text, record) => {\n          return text.map(d => (\n            <Tag color={this.state.colorMap[d.name]} key={d.name}>\n              {d.name}\n            </Tag>\n          ))\n        }\n      },\n      {\n        title: '分类',\n        dataIndex: 'categories',\n        render: (text, record) => {\n          return text.map(d => (\n            <Tag color={'#2db7f5'} key={d.name}>\n              {d.name}\n            </Tag>\n          ))\n        }\n      },\n      {\n        title: '发布时间',\n        dataIndex: 'create_at',\n        sorter: (a, b) => moment(a.createdAt).isBefore(b.createdAt)? 1 : -1\n      },\n      {\n        title: '修改时间',\n        dataIndex: 'update_at',\n        sorter: (a, b) => moment(a.updatedAt).isBefore(b.updatedAt) ? 1 : -1\n      },\n      {\n        title: '操作',\n        render: (text, record) => {\n          return (\n            <div className=\"action\">\n              <Link to={`/article/${record.id}`}>查看</Link>\n              <Divider type=\"vertical\" />\n              {/* <span className=\"btn-edit\">编辑</span> */}\n              <Link to={{ pathname: '/admin/articles/edit', state: { articleId: record.id } }}>编辑</Link>\n              <Divider type=\"vertical\" />\n              <span className=\"btn-delete\" onClick={() => this.handleDelete(record.id, record.title)}>\n                删除\n              </span>\n            </div>\n          )\n        }\n      }\n    ]\n  }\n\n  fetchList = ({ current = 1, pageSize = 10, ...query }) => {\n    axios.get('/article', { params: { page: current, pageSize, ...query } }).then(res => {\n      const pagination = {\n        current,\n        pageSize,\n        total: res.count\n      }\n      this.setState({ list: res.results, pagination })\n    })\n  }\n\n  handleChange = pagination => {\n    this.fetchList({ ...pagination, ...this.state.query })\n  }\n\n  /**\n   * @param {Number} - 文章 id\n   */\n  handleDelete = (articleId, title) => {\n    Modal.confirm({\n      title: '您确认删除该文章?，此操作不可恢复！',\n      content: `文章： ${title} `,\n\n      onOk: () => {\n          let token=localStorage.getItem('token')\n          axios({\n              // url:'/article',\n              url: '/article/' + articleId,\n              method: 'delete',\n              // data: params,\n              headers: {\n                  Authorization: ' JWT ' + token\n              }\n          }).then(res => {\n                if (res.code === 200) {\n                  this.fetchList(this.state.pagination)\n                  message.success(res.message)\n                }\n              })\n        // axios.delete('/article/delete', { params: { articleId } }).then(res => {\n        //   if (res.code === 200) {\n        //     this.fetchList(this.state.pagination)\n        //     message.success(res.message)\n        //   }\n        // })\n      }\n    })\n  }\n\n  getQuery = query => {\n    this.setState({ query })\n\n    this.fetchList({ ...query, current: 1 })\n  }\n\n  render() {\n    const { list, pagination } = this.state\n    return (\n      <div className=\"manager\">\n        <QueryForm getQuery={this.getQuery} />\n        <Table\n          rowKey=\"id\"\n          bordered\n          columns={this.getColumns()}\n          dataSource={list}\n          pagination={pagination}\n          onChange={this.handleChange}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Manager\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"sourceRoot":""}