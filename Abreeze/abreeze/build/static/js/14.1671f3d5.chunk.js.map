{"version":3,"sources":["views/admin/user/index.jsx"],"names":["UserManage","state","list","pagination","getColumns","title","dataIndex","render","text","record","react__WEBPACK_IMPORTED_MODULE_14___default","a","createElement","antd_es_button__WEBPACK_IMPORTED_MODULE_8__","type","onClick","_this","handleDelete","id","username","fetchList","_ref","_ref$current","current","_ref$pageSize","pageSize","token","localStorage","getItem","axios","url","method","headers","Authorization","then","res","total","count","setState","results","userId","antd_es_modal__WEBPACK_IMPORTED_MODULE_6__","confirm","content","concat","onOk","code","antd_es_message__WEBPACK_IMPORTED_MODULE_4__","success","message","handleChange","Object","C_Users_Administrator_Desktop_react_blog_dev_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","query","this","page","_this$state","antd_es_table__WEBPACK_IMPORTED_MODULE_1__","rowKey","bordered","columns","dataSource","onChange","Component"],"mappings":"iPAKMA,oNACJC,MAAQ,CACNC,KAAM,GACNC,WAAY,MAOdC,WAAa,WACX,MAAO,CACL,CACEC,MAAO,qBACPC,UAAW,YAQb,CACED,MAAO,eACPE,OAAQ,SAACC,EAAMC,GAAP,OAAkBC,EAAAC,EAAAC,cAAAC,EAAA,GAAQC,KAAK,SAASC,QAAS,kBAAMC,EAAKC,aAAaR,EAAOS,GAAIT,EAAOU,YAAzE,sBAKhCC,UAAY,SAAAC,GAAoC,IAAAC,EAAAD,EAAjCE,eAAiC,IAAAD,EAAvB,EAAuBA,EAAAE,EAAAH,EAApBI,gBAAoB,IAAAD,EAAT,GAASA,EACxCE,EAAMC,aAAaC,QAAQ,SAC/BC,YAAM,CACFC,IAAI,OACJC,OAAQ,MACRC,QAAS,CACLC,cAAe,QAAUP,KAE9BQ,KAAK,SAAAC,GACJ,IAAMhC,EAAa,CACfoB,UACAE,WACAW,MAAOD,EAAIE,OAEfrB,EAAKsB,SAAS,CAAEpC,KAAMiC,EAAII,QAASpC,oBAY3Cc,aAAe,SAACuB,EAAQrB,GACtBsB,EAAA,EAAMC,QAAQ,CACZrC,MAAO,0GACPsC,QAAO,sBAAAC,OAASzB,EAAT,KACP0B,KAAM,WACF,IAAInB,EAAMC,aAAaC,QAAQ,SAC/BC,YAAM,CAEFC,IAAK,SAAWU,EAChBT,OAAQ,SAERC,QAAS,CACLC,cAAe,QAAUP,KAE9BQ,KAAK,SAAAC,GACa,MAAbA,EAAIW,OACJ9B,EAAKI,UAAUJ,EAAKf,MAAME,YAC1B4C,EAAA,EAAQC,QAAQb,EAAIc,kBA2BpCC,aAAe,SAAA/C,GACba,EAAKI,UAAL+B,OAAAC,EAAA,EAAAD,CAAA,GAAoBhD,EAAea,EAAKf,MAAMoD,4FA7F9CC,KAAKlC,UAAU,CAAEmC,KAAM,qCAgGhB,IAAAC,EACsBF,KAAKrD,MAA1BC,EADDsD,EACCtD,KAAMC,EADPqD,EACOrD,WACd,OACEO,EAAAC,EAAAC,cAAA6C,EAAA,GACEC,OAAO,KACPC,UAAQ,EACRC,QAASN,KAAKlD,aACdyD,WAAY3D,EACZC,WAAYA,EACZ2D,SAAUR,KAAKJ,sBAhHEa,cAsHV/D","file":"static/js/14.1671f3d5.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport axios from '@/lib/axios'\nimport { getCommentsCount } from '@/lib'\nimport { Table, Button, Modal, message } from 'antd'\n\nclass UserManage extends Component {\n  state = {\n    list: [],\n    pagination: {}\n  }\n\n  componentDidMount() {\n    this.fetchList({ page: 1 })\n  }\n\n  getColumns = () => {\n    return [\n      {\n        title: '用户名',\n        dataIndex: 'username'\n      },\n      // {\n      //   title: '评论数',\n      //   dataIndex: 'comments',\n      //   render: text => getCommentsCount(text),\n      //   sorter: (a, b) => getCommentsCount(a.comments) - getCommentsCount(b.comments)\n      // },\n      {\n        title: '操作',\n        render: (text, record) => <Button type=\"danger\" onClick={() => this.handleDelete(record.id, record.username)}>删除</Button>\n      }\n    ]\n  }\n\n  fetchList = ({ current = 1, pageSize = 10 }) => {\n      let token=localStorage.getItem('token')\n      axios({\n          url:'user',\n          method: 'get',\n          headers: {\n              Authorization: ' JWT ' + token\n          }\n      }).then(res => {\n          const pagination = {\n              current,\n              pageSize,\n              total: res.count\n          }\n          this.setState({ list: res.results, pagination })\n      })\n    // axios.get('/user', { params: { page: current, pageSize } }).then(res => {\n    //   const pagination = {\n    //     current,\n    //     pageSize,\n    //     total: res.count\n    //   }\n    //   this.setState({ list: res.rows, pagination })\n    // })\n  }\n\n  handleDelete = (userId, username) => {\n    Modal.confirm({\n      title: '您确认删除该用户?，此操作不可恢复！',\n      content: `用户： ${username} `,\n      onOk: () => {\n          let token=localStorage.getItem('token')\n          axios({\n              // url:'/article',\n              url: '/user/' + userId,\n              method: 'delete',\n              // data: params,\n              headers: {\n                  Authorization: ' JWT ' + token\n              }\n          }).then(res => {\n              if (res.code === 200) {\n                  this.fetchList(this.state.pagination)\n                  message.success(res.message)\n              }\n          })\n          // axios({\n          //     // url:'/article',\n          //     url: '/user/' + userId,\n          //     method: 'delete',\n          //     // data: params,\n          //     headers: {\n          //         Authorization: ' JWT ' + token\n          //     }\n          // }).then(res => {\n          //     if (res.code === 200) {\n          //         this.fetchList(this.state.pagination)\n          //         message.success(res.message)\n          //     }\n          // })\n        // axios.delete('/user/delete', { params: { userId } }).then(res => {\n        //   if (res.code === 200) {\n        //     this.fetchList(this.state.pagination)\n        //     message.success(res.message)\n        //   }\n        // })\n      }\n    })\n  }\n\n  handleChange = pagination => {\n    this.fetchList({ ...pagination, ...this.state.query })\n  }\n\n  render() {\n    const { list, pagination } = this.state\n    return (\n      <Table\n        rowKey=\"id\"\n        bordered\n        columns={this.getColumns()}\n        dataSource={list}\n        pagination={pagination}\n        onChange={this.handleChange}\n      />\n    )\n  }\n}\n\nexport default UserManage\n"],"sourceRoot":""}